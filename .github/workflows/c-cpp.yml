name: Build miasst for Termux

on:
  push:
    paths:
      - miasst.c
  pull_request:
    paths:
      - miasst.c
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-termux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Tag & Release
      run: |
        VERSION=$(grep -oP '#define VERSION "\K[^"]+' miasst.c)
        if ! git ls-remote --tags origin | grep -q "$VERSION"; then
          git tag "$VERSION"
          git push origin "$VERSION"
        else
          echo "Tag $VERSION already exists, skipping tag creation."
        fi
        if ! gh release view $VERSION; then
          gh release create $VERSION --title "Release $VERSION"
        else
          echo "Release $VERSION already exists, skipping release creation."
        fi

    - name: Build miasst for Termux
      run: |
        for arch in arm aarch64; do
          docker run --name $arch --privileged \
            -v $(pwd)/miasst.c:/data/data/com.termux/files/home/miasst.c \
            -v $(pwd)/tiny-json:/data/data/com.termux/files/home/tiny-json \
            termux/termux-docker:$arch bash -c "yes | pkg install clang libusb libc++ && clang -o miasst_termux_$arch miasst.c tiny-json/tiny-json.c -I/usr/include/openssl -I. -lssl -lcrypto -lcurl -lusb-1.0"
          docker cp $arch:/data/data/com.termux/files/home/miasst_termux_$arch ./
        done

    - name: Upload Termux Build
      run: |
        VERSION=$(grep -oP '#define VERSION "\K[^"]+' miasst.c)
        gh release upload $VERSION ./miasst_termux_aarch64 ./miasst_termux_arm --clobber
